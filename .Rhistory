actvityData$interval[i],
sep = "");
if(nchar(actvityData$interval[i])==4) break}
}
for (i in 1:length(activityData$interval)) {
while (nchar(activityData$interval[i])<4) {
activityData$interval[i]<-paste("0",
activityData$interval[i],
sep = "");
if(nchar(activityData$interval[i])==4) break}
}
mean(nchar(activityData$interval))
activityData$interval<-as.factor(activityData$interval)
str(actvityData$interval)
str(activityData$interval)
activityData<-read.csv("activity.csv", header = T)
library(lubridate)
int2<-hm(activityData$interval)
int2
activityData$interval<-as.character(activityData$interval)
int2<-hm(activityData$interval)
for (i in 1:length(activityData$interval)) {
while (nchar(activityData$interval[i])<4) {
activityData$interval[i]<-paste("0",
activityData$interval[i],
sep = "");
if(nchar(activityData$interval[i])==4) break}
}
int2<-hm(activityData$interval)
?timeSeries
?hm
?strsplit
strsplit(activityData$interval[1], "")[[1]]
strsplit(activityData$interval[2], "")[[1]]
strsplit(activityData$interval, "")[[1]]
strsplit(activityData$interval, "")[[2]]
strsplit(activityData$interval, "")[[3]]
splits<-strsplit(activityData$interval, "")
class(split)
class(splits)
pasted<-paste(splits[1:2], ":", splits[3:4])
pasted
pasted<-paste(splits[c(1,2)], ":", splits[c(3,4)])
pasted
pasted<-cat(splits[c(1,2)], ":", splits[c(3,4)])
splits[1]
splits[[]][1]
splits[[1]][[1]]
splits[[1]][[2]]
splits[[2]][[4]]
pasted<-paste(splits[[c(1,2)]], ":", splits[[c(3,4)]])
pasted
pasted<-paste(splits[[1]],splits[[2]], ":", splits[[3]],splits[[4]])
pasted
pasted<-paste(splits[[1]],splits[[2]], ":", splits[[3]],splits[[4]], sep = "")
pasted
for (i in 1:10){pasted[i]<-paste(splits[[i]][1], splits[[i]][2], ":", splits[[i]][3], splits[[i]][4])}
pasted[1:10]
for (i in 1:10){pasted[i]<-paste(splits[[i]][1], splits[[i]][2], ":", splits[[i]][3], splits[[i]][4], sep = "")}
pasted[1:10]
splits<-strsplit(activityData$interval, "")
for (i in 1:length(activityData$interval)){
activityData$interval[i]<-paste(splits[[i]][1],
splits[[i]][2],
":",
splits[[i]][3],
splits[[i]][4],
sep = "")
}
activityData$interval
class(activityData$interval)
mean(nchar(activityData$interval))
int2<-hm(activityData$interval)
int2[1]
int2[2]
int2[3]
int2[4]
int2[100]
int2(length(int2))
int2[length(int2)]
activityData$int2<-hm(activityData$interval)
intervalsteps2<- activityData %>%
group_by(int2) %>%
summarise(average = mean(steps, na.rm =T))
q1data<-activityData %>%
group_by(date) %>%
summarise (total = sum(steps),
mean = mean(steps, na.rm = T),
median = (median(steps, na.rm = T)))
activityData$interval<-as.character(activityData$interval)
activityData<-read.csv("activity.csv", header = T)
activityData$interval<-as.character(activityData$interval)
for (i in 1:length(activityData$interval)) {
while (nchar(activityData$interval[i])<4) {
activityData$interval[i]<-paste("0",
activityData$interval[i],
sep = "");
if(nchar(activityData$interval[i])==4) break}
}
splits<-strsplit(activityData$interval, "")
for (i in 1:length(activityData$interval)){
activityData$interval[i]<-paste(splits[[i]][1],
splits[[i]][2],
":",
splits[[i]][3],
splits[[i]][4],
sep = "")
}
library(dplyr)
q1data<-activityData %>%
group_by(date) %>%
summarise (total = sum(steps),
mean = mean(steps, na.rm = T),
median = (median(steps, na.rm = T)))
nrow(activityData[activityData$date == "2012-10-02" & activityData$steps == 0,])
hist(q1data$total)
abline(v = mean(activityData$steps, na.rm = T))
mean(activityData$steps, na.rm = T)
mean(q1data$total, na.rm = T)
median(q1data$total, na.rm = T)
hist(q1data$total)
totalmean<-mean(q1data$total, na.rm = T)
totalmedian<-median(q1data$total, na.rm = T)
abline(v = totalmean)
abline(v = totalmedian, col = "red")
library(ggplot2)
q<-qplot(q1data$total)
q + geom_hist()
q + geom_histogram()
q + geom_histogram(binwidth = 10)
q<-qplot(q1data$total, binwidth = 10)
q + geom_histogram(binwidth = 10)
q<-qplot(q1data$total)
q + geom_histogram(binwidth = 10)
intervalsteps<- activityData %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm =T))
plot(intervalsteps$average, type = "l")
plot(y = intervalsteps$average, x = intervalsteps$interval, type = "l")
intervalsteps
plot(y = intervalsteps$average, x = intervalsteps$interval, type = "l")
plot(y = intervalsteps$average, x = intervalsteps$interval, xlim = 0:max(intervalsteps$interval), type = "l")
plot(y = intervalsteps$average, x = intervalsteps$interval, xlim = 0:length(intervalsteps$interval), type = "l")
intervalsteps$interval<-as.Date(intervalsteps$interval)
intervalsteps$interval<-as.Date(intervalsteps$interval, format = "%H:%M")
plot(y = intervalsteps$average, x = intervalsteps$interval, type = "l")
intervalsteps$interval
intervalsteps<- activityData %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm =T))
intervalsteps$interval<-as.POSIXct(intervalsteps$interval, format = "%H:%M")
plot(y = intervalsteps$average, x = intervalsteps$interval, type = "l")
q2<-qplot(aes(intervalsteps$interval, intervalsteps$average))
q2+geom_line()
q2<-qplot(intervalsteps, aes(interval, average))
q2+geom_line()
q2<-qplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
intervalsteps$interval
str(intervalsteps$interval)
str(intervalsteps$interval[1])
str(intervalsteps$interval[1:2])
str(intervalsteps$interval[2])
str(intervalsteps$interval[1[2]])
str(intervalsteps$interval[1)
str(intervalsteps$interval[1])
intervalsteps$interval<-as.POSIXlt(intervalsteps$interval, format = "%H:%M")
str(intervalsteps$interval[1])
?scale_x_datetime
q2<-ggplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
?scale_x_datetime
?date_breaks
q2+geom_line() + scale_x_datetime(minor_breaks = date_breaks("5 min"))
library(scales)
q2+geom_line() + scale_x_datetime(minor_breaks = date_breaks("5 min"))
q2+geom_line() + scale_x_datetime(minor_breaks = date_breaks("5 min"), format = "%H:%M")
q2+geom_line() + scale_x_datetime(format = "%H:%M")
intervalsteps$interval<-format(intervalsteps$interval, format = "%H:%M")
intervalsteps$interval
q2<-ggplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
intervalsteps$interval
plot(y = intervalsteps$average, x = intervalsteps$interval, type = "l")
intervalsteps<- activityData %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm =T))
intervalsteps$interval<-as.POSIXlt(intervalsteps$interval, format = "%H:%M")
intervalsteps$interval
q2<-ggplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
intervalsteps$tinterval<-format(intervalsteps$interval, format = "%H:%M")
q2<-ggplot(intervalsteps, aes(x = tinterval, y = average))
q2+geom_line()
class(intervalsteps$tinterval)
intervalsteps$tinterval<-as.POSIXct(intervalsteps$tinterval, format = "%H:%M")
q2<-ggplot(intervalsteps, aes(x = tinterval, y = average))
q2+geom_line()
intervalsteps<- activityData %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm =T))
class(intervalsteps$interval)
q2<-ggplot(intervalsteps, aes(x = tinterval, y = average))
library(scales)
q2+geom_line()
q2<-ggplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
plot(y = intervalsteps$average, x = intervalsteps$interval, type = "l")
intervalsteps$interval<-as.POSIXlt(intervalsteps$interval, format = "%H:%M")
q2<-ggplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
zz <- tempfile()
cat("
FECHA H_SOLAR;DIR_M;VEL_M;TEMP_M;HR;PRECIP
01/06/14 00:50:00;314.3;1.9;14.1;68.0;-99.9
01/06/14 01:50:00;322.0;1.6;13.3;68.9;-99.9
01/06/14 02:50:00;303.5;2.1;12.3;70.9;-99.9
01/06/14 03:50:00;302.4;1.6;11.6;73.1;-99.9
01/06/14 04:50:00;306.5;1.2;10.9;76.4;-99.9
01/06/14 05:50:00;317.1;0.8;12.6;71.5;-99.9
01/06/14 06:50:00;341.8;0.0;17.1;58.8;-99.9
01/06/14 07:50:00;264.6;1.2;21.8;44.9;-99.9
01/06/14 08:50:00;253.8;2.9;24.7;32.2;-99.9
01/06/14 09:50:00;254.6;3.7;26.7;27.7;-99.9
01/06/14 10:50:00;250.7;4.3;28.3;24.9;-99.9
01/06/14 11:50:00;248.5;5.3;29.1;22.6;-99.9
01/06/14 12:50:00;242.8;4.7;30.3;20.4;-99.9
01/06/14 13:50:00;260.7;4.9;31.3;17.4;-99.9
01/06/14 14:50:00;251.8;5.1;31.9;17.1;-99.9
01/06/14 15:50:00;258.1;4.6;32.4;15.3;-99.9
01/06/14 16:50:00;254.3;5.7;32.4;14.0;-99.9
01/06/14 17:50:00;252.5;4.6;32.0;14.1;-99.9
01/06/14 18:50:00;257.4;3.8;31.1;14.9;-99.9
01/06/14 19:50:00;135.8;4.2;26.0;41.2;-99.9
01/06/14 20:50:00;126.0;1.7;23.5;48.7;-99.9
01/06/14 21:50:00;302.8;0.7;21.6;53.9;-99.9
01/06/14 22:50:00;294.2;1.1;19.3;67.4;-99.9
01/06/14 23:50:00;308.5;1.0;17.5;72.4;-99.9
", file=zz)
datos=read.csv(zz, sep=";", header=TRUE, na.strings="-99.9")
datos$dia=as.POSIXct(datos[,1], format="%y/%m/%d %H:%M:%S")
datos$dia
datos[,1]
ggplot(data=datos,aes(x=dia, y=TEMP_M)) +
geom_path(colour="red") +
ylab("Temperatura (ºC)") +
xlab("Fecha") +
opts(title="Temperatura media")
theme(title="Temperatura media")
ggplot(data=datos,aes(x=dia, y=TEMP_M)) +
geom_path(colour="red") +
ylab("Temperatura (ºC)") +
xlab("Fecha") +
theme(title="Temperatura media")
ggplot(data=datos,aes(x=dia, y=TEMP_M)) +
geom_path(colour="red") +
ylab("Temperatura (ºC)") +
xlab("Fecha")
?axis.text
?axis.text.x
?heme
?theme
q2+geom_line() + theme(axis.text.x = "5 min")
?element_text
q2+geom_line() + theme(axis.ticks.x = "5 min")
?element_line
intervalsteps$interval[1]$min
intervalsteps$interval[2]$min
q2<-ggplot(intervalsteps, aes(x = c(interval$hour, interval$min), y = average))
q2+geom_line()
q2<-ggplot(intervalsteps, aes(x = interval, y = average))
q2+geom_line()
q2+geom_line() + scale_x_datetime(format = "%S:00")
q2+geom_line() + scale_x_datetime(format = "%H:%M")
q2+geom_line() + scale_x_datetime(labels = "%H:%M")
q2+geom_line() + scale_x_datetime(breaks = "%H:%M")
q2+geom_line() + scale_x_datetime(labels = "%S:%00")
q2+geom_line() + scale_x_datetime(labels = "%S:00", breaks = "%S:00")
q2+geom_line() + scale_x_datetime(labels = "%S:00", breaks = "%H:%M")
??breaks
q2+geom_line() + scale_x_datetime(labels = date_format("%S:00"))
q2+geom_line() + scale_x_datetime(labels = date_format("%H:%M"))
medians<-with(activityData, tapply(steps, interval, FUN = function(x) median(x, na.rm = T)))
summary(medians)
plot(medians)
plot(medians, type = "l")
mean(means>medians)
differences<-intervalsteps-medians
plot(differences, type = "l")
mean(medians>intervalsteps)
mean(medians == intervalsteps)
which(intervalsteps == medians)
plot((intervalsteps + medians )/2)
sum(is.na(activityData$steps))
table(is.na(activityData$steps))
table(with(activityData, tapply(steps, date, FUN = function(x) sum(is.na(x)))))
medians<-activityData %>%
group_by(interval) %>%
summarise(median = median (steps, na.rm = T))
activityImpute<-activityData
nas<-which(is.na(activityImpute$steps))
for (i in 1:length(nas)){
activityImpute[nas[i], "steps"]<-
medians$median[medians$interval == activityImpute[nas[i], "interval"]]
}
actImputedDay<-activityImpute %>%
group_by(date) %>%
summarise (total = sum(steps))
hist(actImputedDay$total)
mean<-mean(activityImpute$steps)
median<-median(activityImpute$steps)
group_by(date) %>%
summarise (total = sum(steps))
meanImpDay<-actImpbyMean %>%
group_by(date) %>%
summarise (total = sum(steps))
hist(meanImpDay$total)
meanm<-mean(actImpbyMean$steps)
activityImpute$weekday<-ifelse(wday(activityImpute$date)>1 & wday(activityImpute$date)< 7, "weekday", "weekend")
wdaydata<-activityImpute %>%
group_by(interval, weekday) %>%
summarise(mean = mean(steps))
wdaydata$weekday<-as.factor(wdaydata$weekday)
library(ggplot2)
graph<-ggplot(wdaydata, aes(x = interval, y = mean))
graph + geom_line() + facet_grid(.~weekday)
graph<-ggplot(wdaydata, aes(x = interval, y = mean))
graph + geom_line() + facet_grid(.~weekday)
wdaydata
class(wdaydata$interval)
wdaydata$interval<-as.POSIXlt(wdaydata$interval, format = "%H:%M")
wdaydata$weekday<-as.factor(wdaydata$weekday)
graph<-ggplot(wdaydata, aes(x = interval, y = mean))
graph + geom_line() + facet_grid(.~weekday)
graph + geom_line() + facet_grid(.~weekday) + scale_x_datetime(labels = date_format("%H:%M"))
graph + geom_line() + facet_grid(.~weekday) + scale_x_datetime(labels = date_format("%H:%M")) + global(theme = "bw")
graph + geom_line() + facet_grid(.~weekday) + scale_x_datetime(labels = date_format("%H:%M")) + theme("bw")
graph + geom_line() + facet_grid(.~weekday) + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw
graph + geom_line() + facet_grid(.~weekday) + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
graph + geom_line() + facet_grid(weekday~.) + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
activityImpute$weekday<-ifelse(wday(activityImpute$date)>1 &
wday(activityImpute$date)<7,
"weekday",
"weekend")
wdaydata<-activityImpute %>%
group_by(interval, weekday) %>%
summarise(mean = mean(steps))
wdaydata
wdaydata$interval<-as.POSIXlt(wdaydata$interval, format = "%H:%M")
wdaydata$weekday<-as.factor(wdaydata$weekday)
wday2<-wdaydata
g2<-ggplot(wday2, aes(x = interval, y = mean))
g2<-ggplot(wday2, aes(x = interval, y = mean, colour = weekday))
graph + geom_line() + scale_x_datetime(labels = dateformat("%H:%M")) + theme_bw()
graph + geom_line() + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
wdaydata$weekday<-as.factor(wdaydata$weekday)
wday2<-wdaydata
g2<-ggplot(wday2, aes(x = interval, y = mean, colour = weekday))
graph + geom_line() + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
class(wday2$weekday)
graph + geom_point() + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
g2<-ggplot(wday2, aes(x = interval, y = mean, colour = weekday))
graph + geom_line() + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
library(reshape2)
wmelt<-melt(wday2, id = weekday)
wmelt<-melt(wday2, id = "weekday")
wmelt<-melt(wday2, id.vars = weekday)
wmelt<-melt(wday2, id.vars = "weekday")
wday2$interval<-as.factor(wday2$interval)
with(wdaydata, plot(x = interval[wdaydata$weekday = "weekday"], y = mean[wdaydata$weekday = "weekday"])
with(wdaydata, plot(x = interval[wdaydata$weekday == "weekday"], y = mean[wdaydata$weekday == "weekday"])
)
with(wdaydata, plot(x = interval[wdaydata$weekday == "weekday"], y = mean[wdaydata$weekday == "weekday"], type = "l")
)
with(wdaydata, points(x = interval[wdaydata$weekday == "weekend"], y = mean[wdaydata$weekday == "weekday"], type = "l", col = "red"))
with(wdaydata, plot(x = interval[wdaydata$weekday == "weekday"], y = mean[wdaydata$weekday == "weekday"], type = "l"))
with(wdaydata, points(x = interval[wdaydata$weekday == "weekend"], y = mean[wdaydata$weekday == "weekend"], type = "l", col = "red"))
graph<-ggplot(wdaydata, aes(x = interval, y = mean))
graph + geom_line() + facet_grid(weekday~.) + scale_x_datetime(labels = date_format("%H:%M")) + theme_bw()
bydayhist<-qplot(stepsbyday$total)
library(ggplot2)
bydayhist<-qplot(stepsbyday$total)
bydayhist + geom_histogram() + theme_bw()
stepsbyday<-activityData %>%
group_by(date) %>%
summarise (total = sum(steps),
mean = mean(steps, na.rm = T),
median = (median(steps, na.rm = T)))
bydayhist<-qplot(stepsbyday$total)
bydayhist + geom_histogram() + theme_bw()
q1data<-activityData %>%
group_by(date) %>%
summarise (total = sum(steps),
mean = mean(steps, na.rm = T),
median = (median(steps, na.rm = T)))
library(dplyr)
q1data<-activityData %>%
group_by(date) %>%
summarise (total = sum(steps),
mean = mean(steps, na.rm = T),
median = (median(steps, na.rm = T)))
library(ggplot2)
q<-qplot(q1data$total)
q + geom_histogram()
q + geom_histogram() + theme_bw()
stepsbyday<-activityData %>%
group_by(date) %>%
summarise (total = sum(steps),
mean = mean(steps, na.rm = T),
median = (median(steps, na.rm = T)))
totalmean<-mean(stepsbyday$total, na.rm = T)
totalmedian<-median(stepsbyday$total, na.rm = T)
bydayhist<-qplot(stepsbyday$total)
bydayhist + geom_histogram() + theme_bw()
getwd()
library(xtable)
xtable(with(activityData, tapply(steps, date, FUN = function(x) sum(is.na(x)))))
xtable(with(activityData, tapply(steps, date, FUN = function(x) sum(is.na(x)))), method ="html")
rm(list = ls())
activityData<-read.csv("activity.csv", header = T)
mean(activityData$steps, na.rm = T)
median(activityData$steps, na.rm = T)
medians<-with(activityData, tapply(steps, interval, FUN = function(x) median(x, na.rm = T)))
plot(medians, type = "l")
means<-with(activityData, tapply(steps, interval, FUN = function(x) mean(x, na.rm = T)))
plot(means, type = "l")
differences<-means-medians
plot(differences, type = "l")
diffplot<-ggplot(aes(y = differences, x = interval))
library(ggplot2)
diffplot<-ggplot(aes(y = differences, x = interval))
plot(differences, type = "l")
activityImpute<-activityData
activityImpute$weekday<-ifelse(wday(activityImpute$date)>1 &
wday(activityImpute$date)<7,
"weekday",
"weekend")
library(lubridate)
activityImpute$weekday<-ifelse(wday(activityImpute$date)>1 &
wday(activityImpute$date)<7,
"weekday",
"weekend")
chaeckimpute<-activityImpute %>%
group_ddsada
table(with(activityImpute, tapply(steps, weekday, FUN = function(x) sum(is.na(x)))))
max(means)
max(medians)
max(differences)
x<-1:5
y<-6:10
z<-data.frame(x = x, y = y)
z
max(x)
max(y)
which(max(y))
which(is.max(y))
library(dplyr)
max<-filter(z, x == max(x))
max
par(mfrow = c(1,2))
plot(z$x)
plot(z$y)
activityData<-read.csv("activity.csv", header = T)
activityData$interval<-as.character(activityData$interval)
for (i in 1:length(activityData$interval)) {
while (nchar(activityData$interval[i])<4) {
activityData$interval[i]<-paste("0",
activityData$interval[i],
sep = "");
if(nchar(activityData$interval[i])==4) break}
}
intervalsteps<- activityData %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm =T))
maxinterval<-filter(intervalsteps, average == max(average))
library(dplyr)
intervalsteps<- activityData %>%
group_by(interval) %>%
summarise(average = mean(steps, na.rm =T))
maxinterval<-filter(intervalsteps, average == max(average))
maxinterval
split<-strsplit(maxinterval$average, "")
split<-strsplit(maxinterval$interval, "")
split
maxinterval$interval<-paste(split[1], split[2], ":", split[3], split[4], sep = "")
maxinterval$interval
maxinterval
maxinterval<-filter(intervalsteps, average == max(average))
split<-strsplit(maxinterval$interval, "")
str(split)
maxinterval$interval<-paste(split[[1]][1],
split[[1]][2],
":",
split[[1]][3],
split[4][[1]], sep = "")
maxinterval$interval
maxinterval$interval<-paste(split[[1]][1],
split[[1]][2],
":",
split[[1]][3],
split[[1]][4], sep = "")
maxinterval$interval
distrInt<- activityData %>%
group_by(interval) %>%
summarise(total = sum(steps))
hist(distrInt$total)
?sum
distrInt<- activityData %>%
group_by(interval) %>%
summarise(total = sum(steps, na.rm =T))
hist(distrInt$total)
?plot
